{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/create-update/create-update.component.css","./src/app/create-update/create-update.component.html","./src/app/create-update/create-update.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/list/list.component.css","./src/app/list/list.component.html","./src/app/list/list.component.ts","./src/app/navbar/navbar.component.css","./src/app/navbar/navbar.component.html","./src/app/navbar/navbar.component.ts","./src/app/shared/task.service.ts","./src/app/task.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<app-navbar></app-navbar>\\n\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n<div class=\\\"fixed\\\">\\n  <footer class=\\\"footer\\\">\\n    <p align=\\\"right\\\">&copy; 2018 Made with love.</p>\\n  </footer>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","\n// Libraries: will be in imports: [] \nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { CreateUpdateComponent } from './create-update/create-update.component';\nimport { ListComponent } from './list/list.component';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n// Services: will be in providers:[]\nimport { TaskService } from './shared/task.service';\nimport { HomeComponent } from './home/home.component';\n\n\nconst appRoutes: Routes =[\n  { path:'', component: HomeComponent },\n  { path:'list', component: ListComponent },\n  { path: 'createUpdate', component: CreateUpdateComponent },\n  { path: '**', redirectTo: '', pathMatch: 'full' }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateUpdateComponent,\n    ListComponent,\n    NavbarComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes)\n\n  ],\n  providers: [TaskService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/create-update/create-update.component.css\n// module id = ./src/app/create-update/create-update.component.css\n// module chunks = main","module.exports = \"<form (ngSubmit)=\\\"createOrUpdate()\\\">\\n\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"anything\\\">Anything</label>\\n      <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"task.name\\\" class=\\\"form-control\\\">\\n  </div>\\n  \\n  <div class=\\\"form-group\\\">\\n        <label for=\\\"anything\\\">Anything</label>\\n        <input type=\\\"text\\\" name=\\\"time\\\" [(ngModel)]=\\\"task.time\\\" class=\\\"form-control\\\">\\n  </div>\\n\\n  <input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-success\\\">\\n</form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/create-update/create-update.component.html\n// module id = ./src/app/create-update/create-update.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, Route } from '@angular/router';\nimport { TaskService } from '../shared/task.service';\nimport { Task } from '../task';\n\n@Component({\n  selector: 'app-create-update',\n  templateUrl: './create-update.component.html',\n  styleUrls: ['./create-update.component.css']\n})\nexport class CreateUpdateComponent implements OnInit {\n\n  task:Task;\n\n  constructor(private taskService:TaskService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.task = this.taskService.getter();\n  }\n\n  createOrUpdate(){\n    if(this.task._id == undefined){\n\n    this.taskService.createTask(this.task).subscribe(\n      data => {\n        console.log(data);\n        this.router.navigate(['/list']);\n      },\n      error=>{\n        console.log(error);\n      })\n    }else{\n      this.taskService.updateTask(this.task).subscribe(\n        data => {\n          console.log(data);\n          this.router.navigate(['/list']);\n        },\n        error=>{\n          console.log(error);\n        })\n    }\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/create-update/create-update.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = ./src/app/home/home.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"jumbotron text-center\\\">\\n    <h1>Full Stack Application</h1>\\n    <p class=\\\"lead\\\">Welcome to the MEAN Stack Application by <strong>Steve Dang</strong></p>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = ./src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/list/list.component.css\n// module id = ./src/app/list/list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <h4 class=\\\"card-title\\\">Tasks and Time</h4>\\n    <table class=\\\"table table-hover\\\">\\n      \\n      <thead>\\n        <tr>\\n          <th>Number</th>\\n          <th>Anything</th>\\n          <th>Anything</th>\\n          <th>Options</th>\\n        </tr>\\n      </thead>\\n\\n      <tbody>\\n        <tr *ngFor = \\\"let task of tasks; let i = index\\\">\\n          <td>{{i+1}}</td>\\n          <td>{{task.name}}</td>\\n          <td>{{task.time}}</td>\\n          <td>\\n            <button class=\\\"btn btn-secondary\\\" (click)=\\\"deleteTask(task)\\\">Finished</button>\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"edit(task)\\\" >Edit</button>\\n          </td>\\n        </tr>\\n      </tbody>\\n\\n    </table>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/list/list.component.html\n// module id = ./src/app/list/list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { TaskService } from '../shared/task.service';\nimport { Task } from '../task';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  // init the tasks val as an array of objects\n  // this can be load by *ngFor to keep the list of tasks\n  // update instantly after added, updated or deleted\n  tasks:Task[];\n\n  constructor(private _taskService: TaskService, private router: Router) { }\n\n  ngOnInit() {\n    // Fetch the data from DB\n    this.getTasks();\n  }\n\n  // this will fetch the data from the database \n  // we will run this as soon as the user visit the website\n  // this function will be call in ngOnInit()\n  getTasks(){\n    this._taskService.readTasks().subscribe(\n      data => {\n        console.log(data);\n        this.tasks = data['msg'];\n      },\n      error => {\n        console.log(error);\n      }\n    )\n  }\n\n  // send this task to the task object in the update component\n  edit(task){\n    this._taskService.setter(task);\n    this.router.navigate(['/createUpdate']);\n  }\n\n\n  deleteTask(task){\n    this._taskService.deleteTask(task._id).subscribe(\n      data=>{\n        this.tasks.splice(this.tasks.indexOf(task),1);\n      },\n      error =>{\n        console.log(error);\n      }\n    )\n  }\n\n}\n\n\n\n// *Note: The sever, mongodb, and the ng serve have to be on at the same time\n// if the browser prevented the connection, get \"cors\" independency \n// Use post man to add tasks into database to test localhost:8080/create : POST\n// body/urlencoded/put in the object name and time\n\n\n// WEBPACK FOOTER //\n// ./src/app/list/list.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/navbar/navbar.component.css\n// module id = ./src/app/navbar/navbar.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n  <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">Daily Goals</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link btn btn-secondary\\\" [routerLink]=\\\"['/list']\\\">List <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      &nbsp;&nbsp;\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link btn btn-secondary\\\" href=\\\"/createUpdate\\\" (click)=\\\"newTask($event)\\\" >New</a>\\n      </li>\\n    </ul>\\n\\n  </div>\\n</nav>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/navbar/navbar.component.html\n// module id = ./src/app/navbar/navbar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TaskService } from '../shared/task.service';\nimport { Task } from '../task';\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private router: Router, private taskService: TaskService) { }\n\n  ngOnInit() {\n  }\n\n  newTask(event:any){\n    event.preventDefault();\n    this.taskService.setter(new Task());\n    \n    this.router.navigate(['/createUpdate']);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/navbar/navbar.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Task } from '../task';\n\n@Injectable()\nexport class TaskService {\n\n  private task:Task;\n\n  // back end server on port 8080\n  // HttpHeaders(this is what similar to the Headers in PostMan to send data to server)\n  private baseUri:string=\"http://localhost:8080\";\n  private headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  constructor(private http: HttpClient) { }\n\n  // These method will talk/send_data to the back end:(server) \n\n  // Create a new task, the passed in task will be the Object type\n  // then get send over the server to add\n  createTask(task: Task){\n    return this.http.post(this.baseUri+'/create', task, {headers:this.headers});\n  }\n\n  // No params needed.\n  readTasks(){\n    return this.http.get(this.baseUri+'/read',{headers:this.headers});\n  }\n\n  updateTask(task: Task){\n    return this.http.put(this.baseUri+'/update', task, {headers:this.headers});\n  }\n\n  // Param is an id with string type from the view/template\n  deleteTask(id: string){\n    return this.http.delete(this.baseUri+'/delete/'+id, {headers:this.headers});\n  }\n\n  setter(task:Task){\n    this.task=task;\n  }\n  getter(){\n    return this.task;\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/task.service.ts","\n\n// This is an object to hold inserted data,\n// then get push to the database\n\nexport class Task {\n    // _id will get grenerated with the Schema in DataBase\n    // it's optional, when add a new task we don't need this id :)\n    public _id?: string; \n    public name: string;\n    public time: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/task.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}